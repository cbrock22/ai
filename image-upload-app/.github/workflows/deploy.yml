name: Deploy to AWS Lightsail

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Docker image
      run: docker build -t image-upload-app .

    - name: Save Docker image
      run: docker save image-upload-app | gzip > image-upload-app.tar.gz

    - name: Copy image to Lightsail
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.LIGHTSAIL_HOST }}
        username: ${{ secrets.LIGHTSAIL_USERNAME }}
        key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
        source: "image-upload-app.tar.gz"
        target: "/tmp"

    - name: Deploy on Lightsail
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.LIGHTSAIL_HOST }}
        username: ${{ secrets.LIGHTSAIL_USERNAME }}
        key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
        script: |
          # Load the Docker image
          docker load < /tmp/image-upload-app.tar.gz

          # Stop and remove old container
          docker stop image-upload-app || true
          docker rm image-upload-app || true

          # Run new container
          docker run -d \
            --name image-upload-app \
            -p 80:3001 \
            -e NODE_ENV=production \
            -e USE_S3=true \
            -e AWS_REGION=${{ secrets.AWS_REGION }} \
            -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            -e S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }} \
            --restart unless-stopped \
            image-upload-app

          # Clean up
          rm /tmp/image-upload-app.tar.gz

          # Remove old images
          docker image prune -f
